<?php
header('Access-Control-Allow-Origin: *');
require_once "../../../bootstrap.php";

$taskId = (int) $_POST['taskId'];

$tradeIn = $tradeInController->get($taskId);
$tradeIn->setTimeController($timeController);
$stage = $tradeIn->getStage();

switch ($stage){
    case '0': //Seller
        $tradeIn->updateStage('1', $tradeIn->getSeller()->getFullName());

        $push->push('Sales has updated a trade in task!', $tradeIn->getManager()->getToken());
        break;

    case '1': //Manager
        if ($_POST['action'] === 'accept'){
            $tradeIn->updateStage('2', $tradeIn->getManager()->getFullName())
                ->setPrice($_POST['price']);

            $push->push("Manager has approved your trade in task!", $tradeIn->getSeller()->getToken());
        }
        else{
            $tradeIn->updateStage('5', $tradeIn->getManager()->getFullName());
            $tradeIn->getSelling()->updateStage('11', $tradeIn->getManager());

            $push->pushWithNotice("Trade in task {$tradeIn->getId()} has been rejected by manager!", $tradeIn->getManager(), $tradeIn->getSeller());
        }
        break;

    case '2': //Seller
        if ($_POST['action'] === 'accept'){
            $tradeIn->updateStage('3', $tradeIn->getSeller()->getFullName());

            $push->push("You have a new trade in task!", $tradeIn->getAccounting()->getToken());
        }
        else{
            $tradeIn->updateStage('1', $tradeIn->getSeller()->getFullName());

            $push->push("Seller has rejected your price for trade in task {$tradeIn->getId}", $tradeIn->getManager()->getToken());
        }
        break;

    case '3': //Accounting
        $tradeIn->updateStage('4', $tradeIn->getAccounting()->getFullName());

        $tradeIn->getSelling()->setTradeInPrice($tradeIn->getPrice())
            ->setTimeController($timeController)
            ->updateStage(substr($tradeIn->getSelling()->getStage(), '1'), "Auto generated by trade in - last step finished by {$tradeIn->getAccounting()->getFullName()}");
        break;
}

$entityManager->flush();