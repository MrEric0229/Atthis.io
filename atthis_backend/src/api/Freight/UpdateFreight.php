<?php

//namespace Api\Freight;

header('Access-Control-Allow-Origin: *');
require_once "../../../bootstrap.php";

$taskId = (int) $_POST['taskId'];

$freight = $freightController->get($taskId)->setTimeController($timeController)->setTimeController($timeController);

$stage = $freight->getStage();

switch ($stage){
    case '0':
        $frontDesk = $userController->get($_POST['frontDesk']);

        $freight->setFrontDesk($frontDesk)
            ->setNote($_POST['note'])
            ->updateStage('1', $freight->getManager()->getFullName());

        $taskController->create($frontDesk, $taskListController->get(\Entity\TaskList::FREIGHT), $freight->getId());

        $push->push('You have a new freight task!', $freight->getFrontDesk()->getToken());

        break;

    case '1':
        if (strcmp($_POST['action'], 'accept')==0){
            $freight->updateStage('3', $freight->getFrontDesk()->getFullName())
                ->setFinalPrice($_POST['finalPrice']);
        }
        else{
            $freight->updateStage('2', $freight->getFrontDesk()->getFullName())
                ->setFinalPrice($_POST['finalPrice'])
                ->setNote($_POST['note']);

            $push->push('Front desk is asking for freight pricing!', $freight->getManager()->getToken());
        }

        break;

    case '2':
        if (strcmp($_POST['action'], 'accept')==0){
            $freight->updateStage('3', $freight->getManager()->getFullName());

            $push->push('Manger has accepted your pricing request!', $freight->getFrontDesk()->getToken());
        }
        else{
            $freight->updateStage('1', $freight->getManager()->getFullName())
                ->setNote($_POST['note'])
                ->setFinalPrice($_POST['finalPrice']);

            $push->push('Manger has rejected your pricing request!', $freight->getFrontDesk()->getToken());
        }

        break;

    case '3':
        $freight->updateStage('4', $freight->getFrontDesk()->getFullName());

        $push->push("Freight task {$freight->getId()} is completed!", $freight->getManager()->getToken());

        if ($freight->getSelling() == null || strcmp($freight->getSelling()->getStage(), '8')!==0 ){
            $service = $serviceController->create($freight->getCar(),
                $freight->getManager(),
                $_POST['note'],
                "Auto generated by Freight task - Last step finished by {$freight->getFrontDesk()->getFullName()}");
        }

        /** @var \Entity\Selling $selling */
        if (($selling = $freight->getSelling()) !== null && $freight->getSelling()->getStage() === '5'){
            $selling->setTimeController($timeController)
                ->updateStage('6', "Auto generated by Freight task- last step finished by {$freight->getFrontDesk()->getFullName()}")
                ->setService($service);

            $push->pushWithNotice("Freight for Selling {$selling->getId()} is done", $freight->getFrontDesk(), $selling->getManager());
        }
        /** @var \Entity\Selling $selling */
        if (($selling = $freight->getSelling2()) !== null ){
            $paper = $paperworkController->create(
                $selling->getCar(),
                $selling->getCustomer(),
                $selling,
                $selling->getAccounting(),
                $selling->getManager(),
                $selling->getSales(),
                'Picture' //TODO: lowercase?
            );

            $selling->setTimeController($timeController)
                ->updateStage('9', "Auto generated by Freight task- last step finished by {$freight->getFrontDesk()->getFullName()}")
                ->setPaperwork($paper);

            $push->pushWithNotice("Freight (to customer) for Selling {$selling->getId()} is done", $freight->getFrontDesk(), $selling->getManager());
        }
        break;
}
$entityManager->flush();